From eb1306d6bd413605e2a185b6f8c426096e6983b9 Mon Sep 17 00:00:00 2001
From: debbuild <debbuild>
Date: Wed, 3 Sep 2025 13:19:51 +0200
Subject: [PATCH 42/42] Simpler signed/unsigned patches in GB_IO and GB_LISA.

---
 PROTOTYPES/gb_io.ch   |  6 +++---
 PROTOTYPES/gb_lisa.ch | 13 +++++++------
 2 files changed, 10 insertions(+), 9 deletions(-)

diff --git a/PROTOTYPES/gb_io.ch b/PROTOTYPES/gb_io.ch
index 0b8787d..3012799 100644
--- a/PROTOTYPES/gb_io.ch
+++ b/PROTOTYPES/gb_io.ch
@@ -93,13 +93,13 @@ long imap_ord(c)
   char c;
 @y
 long imap_ord(
-  unsigned char c)
+  char c)
 @z
 
 @x [12] l.201
   return (c<0||c>255)? unexpected_char: icode[c];
 @y
-  return icode[c];
+  return icode[(unsigned char)c];
 @z
 
 @x [13] l.205
@@ -109,7 +109,7 @@ extern long imap_ord(); /* the ordinal number of a given character */
 @y
 #define unexpected_char @t\quad@> 127 /* default |icode| value */
 extern char imap_chr(long); /* the character that maps to a given character */
-extern long imap_ord(unsigned char); /* the ordinal number of a given character */
+extern long imap_ord(char); /* the ordinal number of a given character */
 @z
 
 @x [15] l.213
diff --git a/PROTOTYPES/gb_lisa.ch b/PROTOTYPES/gb_lisa.ch
index 840b196..559ea22 100644
--- a/PROTOTYPES/gb_lisa.ch
+++ b/PROTOTYPES/gb_lisa.ch
@@ -244,6 +244,13 @@ utility field.
     /* lower and upper threshold of raw pixel scores */
 @z
 
+@x [24] l.426
+register long j,k,l; /* all-purpose indices */
+@y
+register unsigned long j; /* all-purpose index */
+register long k,l; /* all-purpose indices */
+@z
+
 @x [25] l.431
 @ @<gb_lisa.h@>=
 @y
@@ -273,12 +280,6 @@ utility field.
     if (k<(long)m) {
 @z
 
-@x [28] l.498
-        for (j=l; f[j]!=j; j=f[j]) ; /* find the first element */
-@y
-        for (j=l; f[j]!=(unsigned long)j; j=f[j]) ; /* find the first element */
-@z
-
 @x [28] l.501
       }@+else if (f[l]==l) *apos=-1-*apos,regs++; /* new region found */
 @y
-- 
2.51.0

